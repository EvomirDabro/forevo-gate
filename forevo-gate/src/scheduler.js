import cron from 'node-cron'
import dotenv from 'dotenv'
import { db } from './db.js'
import { hasNft } from './ton.js'
import { Telegraf } from 'telegraf'

dotenv.config()

const BOT_TOKEN = process.env.BOT_TOKEN
const CHAT_ID = process.env.CHAT_ID
const bot = new Telegraf(BOT_TOKEN)

// –∫–∞–∂–¥—ã–µ 6 —á–∞—Å–æ–≤
cron.schedule('0 */6 * * *', async () => {
  console.log('[cron] recheck start')
  await db.read()
  for (const u of db.data.users) {
    try {
      const ok = await hasNft(u.wallet)
      u.verified = ok
      if (!ok) {
        try {
          // –º—è–≥–∫–∏–π ¬´–∫–∏–∫¬ª (–±–∞–Ω‚Üí–∞–Ω–±–∞–Ω)
          await bot.telegram.banChatMember(CHAT_ID, u.tg_id, Math.floor(Date.now()/1000)+30)
          await bot.telegram.unbanChatMember(CHAT_ID, u.tg_id)
        } catch (e) {
          console.warn('kick error', e.message)
        }
        await bot.telegram.sendMessage(u.tg_id, '–î–æ—Å—Ç—É–ø –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: FOREVO NFT –Ω–µ –Ω–∞–π–¥–µ–Ω. –í–µ—Ä–Ω—ë—à—å ‚Äî —è –≤–ø—É—â—É —Å–Ω–æ–≤–∞ ü§ù')
      }
    } catch (e) {
      console.error('recheck error', e)
    }
  }
  await db.write()
  console.log('[cron] recheck done')
})

// –∑–∞–ø—É—Å—Ç–∏—Ç—å –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫
console.log('Scheduler running (every 6h)')
